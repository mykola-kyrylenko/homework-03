{"version":3,"sources":["Filter/Filter.module.css","index.module.css","ContactForm/ContactForm.module.css","ContactForm/ContactForm.js","ContactList/ContactList.js","Filter/Filter.js","App.js","index.js","ContactList/ContactList.module.css"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","addContact","props","validator","console","log","id","uuidv4","reset","uniqueName","alert","this","onSubmit","className","s","ContactForm__container","htmlFor","type","ContactForm__input","pattern","title","required","onChange","ContactList__add__button","Component","ContactList","contacts","onDeleteContact","ContactList__list","map","ContactList__list__item","ContactList__delete__button","onClick","Filter","filter","fragment","Contact__finder","placeholder","target","App","deleteCoontact","contactId","prevState","handleAddContact","newContact","handleCheckUniqueContact","isExistContact","find","contact","handleChangeFilter","getVisibleContacts","toLowerCase","includes","prevProps","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","visibleContacts","container","handleInputChange","onCheck","handleDuplicateContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7ec5655.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fragment\":\"Filter_fragment__KgNNh\",\"Contact__finder\":\"Filter_Contact__finder__ua8zh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src_container__1F2eI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm__container\":\"ContactForm_ContactForm__container__3rsGD\",\"ContactList__add__button\":\"ContactForm_ContactList__add__button__s8Yes\",\"ContactForm__input\":\"ContactForm_ContactForm__input__3VHiq\"};","import {Component} from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport s from './ContactForm.module.css'\r\n\r\nconst INITIAL_STATE = {\r\n    name: '',\r\n    number: ''\r\n};\r\n\r\nclass ContactForm extends Component {\r\n    state = { ...INITIAL_STATE };\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const { name, number } = this.state\r\n        const { addContact } = this.props\r\n        \r\n        const isValidated = this.validator()\r\n        if (!isValidated) return\r\n\r\n        console.log(`\r\n        name: ${name}\r\n        number: ${number}\r\n        `);\r\n\r\n        addContact({ id: uuidv4(), name, number })\r\n        \r\n        // this.props.onSubmit({ ...this.state });\r\n        this.reset();\r\n    };\r\n\r\n    validator = () => {\r\n        const { name, number } = this.state\r\n        const { uniqueName } = this.props\r\n        \r\n        if (!name || !number) {\r\n            alert('Не все поля заполнен')\r\n            return false\r\n        }\r\n\r\n        return uniqueName(name)\r\n    };\r\n\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n \r\n    render() {\r\n        const { name, number} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <form\r\n                    onSubmit={this.handleSubmit}\r\n                    className={s.ContactForm__container}\r\n                    // onCheckUnique={this.uniqueName}\r\n                >\r\n                    <p>Name</p>\r\n                    <label htmlFor=\"\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className={s.ContactForm__input}\r\n                            name=\"name\"\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                            value={name}\r\n                            onChange={this.handleChange}\r\n                            \r\n                            // id={uuidv4()}\r\n                        />\r\n                    </label>\r\n        \r\n                    <p>Number</p>\r\n                    <label htmlFor=\"\">\r\n                        <input\r\n                            type=\"tel\"\r\n                            className={s.ContactForm__input}\r\n                            name=\"number\"\r\n                            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n                            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n                            required\r\n                            value={number}\r\n                            onChange={this.handleChange}\r\n                            // id={uuidv4()}\r\n                        />\r\n                    </label>\r\n      \r\n                    <button\r\n                        type=\"submit\"\r\n                        className={s.ContactList__add__button}\r\n                    >Add contact</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default ContactForm;","import s from './ContactList.module.css'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n\r\n    <ul className={s.ContactList__list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n            <li\r\n                key={uuidv4()}\r\n                className={s.ContactList__list__item}>\r\n                <p>{name}: {number}</p>\r\n                <button\r\n                    className={s.ContactList__delete__button}\r\n                    onClick={() => onDeleteContact(id)}>\r\n                    Delete\r\n                </button>\r\n\r\n            </li>\r\n        ))}     \r\n    </ul>\r\n);\r\n\r\nexport default ContactList;","import s from './Filter.module.css'\r\n\r\nconst Filter = ({ filter, onChange })=>{\r\n    return (\r\n        <div className={s.fragment}>\r\n            <label htmlFor=\"\">\r\n                <input\r\n                    type=\"text\"\r\n                    className={s.Contact__finder}\r\n                    name=\"filter\"\r\n                    placeholder=\"Search\"\r\n                    value={filter}\r\n                    onChange={({ target })=>onChange(target.value)}/>\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filter;","import React, { Component } from 'react';\nimport ContactForm from './ContactForm/ContactForm'\nimport ContactList from './ContactList/ContactList'\nimport Filter from './Filter/Filter'\nimport s from './index.module.css'\n// import { v4 as uuidv4 } from 'uuid';\n\n\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n   \n    filter: '',\n    // name: '',\n    // number: '',\n    // id: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n      // console.log('refreshing contacts')\n    }\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts){\n      this.setState({ contacts: parsedContacts });\n    }\n\n  };\n\n\n\n  deleteCoontact = (contactId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contacts => contacts.id !== contactId)\n    }));\n  };\n\n  handleAddContact = newContact => {\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  handleCheckUniqueContact = (name) => {\n    const { contacts } = this.state\n    const isExistContact = !!contacts.find((contact) => contact.name === name)\n    isExistContact && alert('Contact is already exist')\n\n    return !isExistContact\n   };\n  \n  handleChangeFilter = filter => {\n    this.setState({ filter});\n  };\n\n   getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    // const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n   };\n  \n  render() {\n    const {contacts, filter } = this.state\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <div className={s.container}>\n          <h1>Number Book</h1>\n          <ContactForm\n            contacts={contacts}\n            // onSubmit={this.handleAddContact}\n            onChange={this.handleInputChange}\n            addContact={this.handleAddContact}\n            onCheck={this.handleDuplicateContacts}\n            uniqueName={this.handleCheckUniqueContact}         \n          />\n          <h2>Contacts</h2>\n          <Filter\n            filter={filter}\n            onChange={this.handleChangeFilter} />\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteCoontact}\n          />\n        </div>\n      </>\n    );\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList__list\":\"ContactList_ContactList__list__3BvXG\",\"ContactList__list__item\":\"ContactList_ContactList__list__item__1Ku9W\",\"ContactList__delete__button\":\"ContactList_ContactList__delete__button__2mzk7\"};"],"sourceRoot":""}